{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center cursor-pointer justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,8cACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/components/ui/checkbox.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Checkbox = registerClientReference(\n    function() { throw new Error(\"Attempted to call Checkbox() from the server but Checkbox is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/checkbox.tsx <module evaluation>\",\n    \"Checkbox\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4DACA","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/components/ui/checkbox.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Checkbox = registerClientReference(\n    function() { throw new Error(\"Attempted to call Checkbox() from the server but Checkbox is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/checkbox.tsx\",\n    \"Checkbox\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wCACA","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/components/ui/dropdown-menu.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iEACA;AAEG,MAAM,2BAA2B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,iEACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iEACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iEACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iEACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iEACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iEACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iEACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,iEACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iEACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iEACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iEACA","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/components/ui/dropdown-menu.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6CACA;AAEG,MAAM,2BAA2B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,6CACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6CACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6CACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6CACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6CACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,6CACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,6CACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,6CACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,6CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6CACA","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/components/ui/table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Table = registerClientReference(\n    function() { throw new Error(\"Attempted to call Table() from the server but Table is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"Table\",\n);\nexport const TableBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableBody() from the server but TableBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableBody\",\n);\nexport const TableCaption = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCaption() from the server but TableCaption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableCaption\",\n);\nexport const TableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCell() from the server but TableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableCell\",\n);\nexport const TableFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableFooter() from the server but TableFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableFooter\",\n);\nexport const TableHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHead() from the server but TableHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableHead\",\n);\nexport const TableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHeader() from the server but TableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableHeader\",\n);\nexport const TableRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableRow() from the server but TableRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableRow\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yDACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yDACA","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/components/ui/table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Table = registerClientReference(\n    function() { throw new Error(\"Attempted to call Table() from the server but Table is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"Table\",\n);\nexport const TableBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableBody() from the server but TableBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableBody\",\n);\nexport const TableCaption = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCaption() from the server but TableCaption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableCaption\",\n);\nexport const TableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCell() from the server but TableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableCell\",\n);\nexport const TableFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableFooter() from the server but TableFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableFooter\",\n);\nexport const TableHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHead() from the server but TableHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableHead\",\n);\nexport const TableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHeader() from the server but TableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableHeader\",\n);\nexport const TableRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableRow() from the server but TableRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableRow\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/components/Content/Elements/Table/Table.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport { ArrowUpDown, ChevronDown, MoreHorizontal } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nconst data: Payment[] = [\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"3u1reuv4\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"mike\",\n  },\n  {\n    id: \"derv1ws0\",\n    plan: \"monthly plan\",\n    status: \"offline\",\n    name: \"leon\",\n  },\n  {\n    id: \"5kma53ae\",\n    plan: \"plan 350\",\n    status: \"offline\",\n    name: \"marcellin\",\n  },\n  {\n    id: \"bhqecj4p\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"carla\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"3u1reuv4\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"mike\",\n  },\n  {\n    id: \"derv1ws0\",\n    plan: \"monthly plan\",\n    status: \"offline\",\n    name: \"leon\",\n  },\n  {\n    id: \"5kma53ae\",\n    plan: \"plan 350\",\n    status: \"offline\",\n    name: \"marcellin\",\n  },\n  {\n    id: \"bhqecj4p\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"carla\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"3u1reuv4\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"mike\",\n  },\n  {\n    id: \"derv1ws0\",\n    plan: \"monthly plan\",\n    status: \"offline\",\n    name: \"leon\",\n  },\n  {\n    id: \"5kma53ae\",\n    plan: \"plan 350\",\n    status: \"offline\",\n    name: \"marcellin\",\n  },\n  {\n    id: \"bhqecj4p\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"carla\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"3u1reuv4\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"mike\",\n  },\n  {\n    id: \"derv1ws0\",\n    plan: \"monthly plan\",\n    status: \"offline\",\n    name: \"leon\",\n  },\n  {\n    id: \"5kma53ae\",\n    plan: \"plan 350\",\n    status: \"offline\",\n    name: \"marcellin\",\n  },\n  {\n    id: \"bhqecj4p\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"carla\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"3u1reuv4\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"mike\",\n  },\n  {\n    id: \"derv1ws0\",\n    plan: \"monthly plan\",\n    status: \"offline\",\n    name: \"leon\",\n  },\n  {\n    id: \"5kma53ae\",\n    plan: \"plan 350\",\n    status: \"offline\",\n    name: \"marcellin\",\n  },\n  {\n    id: \"bhqecj4p\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"carla\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"m5gr84i9\",\n    plan: \"monthly plan\",\n    status: \"in session\",\n    name: \"john\",\n  },\n  {\n    id: \"3u1reuv4\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"mike\",\n  },\n  {\n    id: \"derv1ws0\",\n    plan: \"monthly plan\",\n    status: \"offline\",\n    name: \"leon\",\n  },\n  {\n    id: \"5kma53ae\",\n    plan: \"plan 350\",\n    status: \"offline\",\n    name: \"marcellin\",\n  },\n  {\n    id: \"bhqecj4p\",\n    plan: \"hourly\",\n    status: \"in session\",\n    name: \"carla\",\n  },\n];\n\nexport type Payment = {\n  id: string;\n  plan: \"hourly\" | \"plan 350\" | \"monthly plan\";\n  status: \"in session\" | \"offline\";\n  name: string;\n};\n\nexport const columns: ColumnDef<Payment>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => (\n      <div className=\"capitalize\">{row.getValue(\"status\")}</div>\n    ),\n  },\n  {\n    accessorKey: \"name\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Name\n          <ArrowUpDown />\n        </Button>\n      );\n    },\n    cell: ({ row }) => <div className=\"lowercase\">{row.getValue(\"name\")}</div>,\n  },\n  {\n    accessorKey: \"plan\",\n    header: () => <div className=\"text-right\">Plan</div>,\n    cell: ({ row }) => {\n      const amount: string = row.getValue(\"plan\");\n\n      // // Format the amount as a dollar amount\n      // const formatted = new Intl.NumberFormat(\"en-US\", {\n      //   style: \"currency\",\n      //   currency: \"USD\",\n      // }).format();\n\n      return (\n        <div className=\"text-right font-medium\">\n          {amount.toLocaleUpperCase()}\n        </div>\n      );\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row }) => {\n      const payment = row.original;\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger\n            asChild\n            className=\"flex items-center justify-center outline-none focus-visible:ring-0\"\n          >\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\" className=\"bg-white\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem\n              onClick={() => navigator.clipboard.writeText(payment.id)}\n            >\n              Copy payment ID\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>View customer</DropdownMenuItem>\n            <DropdownMenuItem>Logout</DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n\nexport function DataTableDemo() {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    [],\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex items-center justify-between py-4\">\n        <Input\n          placeholder=\"Filter name...\"\n          value={(table.getColumn(\"name\")?.getFilterValue() as string) ?? \"\"}\n          onChange={(event) =>\n            table.getColumn(\"name\")?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\" className=\"ml-auto\">\n              Columns <ChevronDown />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            {table\n              .getAllColumns()\n              .filter((column) => column.getCanHide())\n              .map((column) => {\n                return (\n                  <DropdownMenuCheckboxItem\n                    key={column.id}\n                    className=\"capitalize\"\n                    checked={column.getIsVisible()}\n                    onCheckedChange={(value) =>\n                      column.toggleVisibility(!!value)\n                    }\n                  >\n                    {column.id}\n                  </DropdownMenuCheckboxItem>\n                );\n              })}\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext(),\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext(),\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"text-muted-foreground flex-1 text-sm\">\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <div className=\"space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n            className=\"transition-colors hover:bg-gray-200\"\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n            className=\"transition-colors hover:bg-gray-200\"\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1071, "column": 0}, "map": {"version":3,"sources":["file:///Users/leon/code/Independent/Clients/sparkhub/app/sessions/page.tsx"],"sourcesContent":["import { DataTableDemo } from \"@/components/Content/Elements/Table/Table\";\n\nconst Sessions = () => {\n  return (\n    <div>\n      <DataTableDemo></DataTableDemo>\n    </div>\n  );\n};\nexport default Sessions;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,WAAW;IACf,qBACE,8OAAC;kBACC,cAAA,8OAAC,oJAAA,CAAA,gBAAa;;;;;;;;;;AAGpB;uCACe","debugId":null}}]
}